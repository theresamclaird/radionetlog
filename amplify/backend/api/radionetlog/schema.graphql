type Net
  @model
  @auth(rules: [{ allow: owner, operations: [create, update, delete, read] }]) {
  id: ID!
  rounds: [Round] @hasMany(indexName: "byNet", fields: ["id"])
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

type Round
  @model
  @auth(rules: [{ allow: owner, operations: [create, update, delete, read] }]) {
  id: ID!
  netId: ID! @index(name: "byNet")
  contacts: [Contact] @hasMany(indexName: "byRound", fields: ["id"])
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

type Contact
  @model
  @auth(rules: [{ allow: owner, operations: [create, update, delete, read] }]) {
  id: ID!
  type: String!
    @index(
      name: "contactsByDate"
      queryField: "contactsByDate"
      sortKeyFields: ["createdAt"]
    )

  createdAt: String!
  roundId: ID @index(name: "byRound")
  callSign: String!
  name: String
  location: String
  attributes: [String]
  signalReport: String
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

type Station
  @model
  @auth(rules: [{ allow: owner, operations: [create, update, delete, read] }]) {
  id: ID!
  callSign: String! @index(name: "byCallSign")
  name: String
  location: String
  notes: String
  attributes: [String]
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}
